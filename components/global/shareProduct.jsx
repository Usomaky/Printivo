import React, { useState, useEffect } from "react";
import { CopyToClipboard } from "react-copy-to-clipboard";
import Toastr from "toastr";
import "twin.macro";

export default function ShareProduct({ path }) {
  const [copied, setCopied] = useState(false);
  useEffect(() => {
    if (copied) {
      Toastr.success("Link copied successfully");
      setTimeout(() => {
        setCopied(false);
      }, 3000);
    }
  }, [copied]);
  return (
    <div className="flex items-center">
      <h3 tw="font-sans font-semibold flex-shrink-0 margin-right[18px] text-blue-md">
        Share this store on:
      </h3>
      <a
        href={`https://www.facebook.com/sharer/sharer.php?u=${process.env.NEXT_PUBLIC_BASE_URL}${path}`}
        target="_blank"
      >
        <img
          src="data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M11 17.938C13.0173 17.6813 14.8611 16.6661 16.1568 15.0988C17.4525 13.5314 18.1027 11.5295 17.9754 9.49997C17.848 7.47041 16.9527 5.56549 15.4713 4.17238C13.9898 2.77927 12.0336 2.00252 10 2C7.96396 1.99848 6.00395 2.77334 4.51934 4.16668C3.03473 5.56002 2.13724 7.46699 2.00974 9.49904C1.88225 11.5311 2.53434 13.5353 3.83314 15.1033C5.13195 16.6712 6.97974 17.685 9 17.938V12H7V10H9V8.346C9 7.009 9.14 6.524 9.4 6.035C9.65611 5.55119 10.052 5.15569 10.536 4.9C10.918 4.695 11.393 4.572 12.223 4.519C12.552 4.498 12.978 4.524 13.501 4.599V6.499H13C12.083 6.499 11.704 6.542 11.478 6.663C11.3431 6.73236 11.2334 6.84215 11.164 6.977C11.044 7.203 11 7.427 11 8.345V10H13.5L13 12H11V17.938ZM10 20C4.477 20 0 15.523 0 10C0 4.477 4.477 0 10 0C15.523 0 20 4.477 20 10C20 15.523 15.523 20 10 20Z' fill='%23384A62'/%3E%3C/svg%3E%0A"
          alt=""
        />
      </a>
      <a
        href={`https://twitter.com/intent/tweet?url=${process.env.NEXT_PUBLIC_BASE_URL}${path}`}
        target="_blank"
        className="mx-6"
      >
        <img
          src="data:image/svg+xml,%3Csvg width='21' height='18' viewBox='0 0 21 18' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M14.2995 2.54999C13.5395 2.54987 12.8098 2.84811 12.2674 3.38056C11.7251 3.913 11.4134 4.63709 11.3995 5.39699L11.3715 6.97199C11.3699 7.05656 11.3504 7.13982 11.3143 7.21632C11.2782 7.29281 11.2264 7.36082 11.1622 7.41587C11.098 7.47092 11.0228 7.51178 10.9417 7.53575C10.8606 7.55973 10.7754 7.56629 10.6915 7.55499L9.13053 7.34299C7.07653 7.06299 5.10853 6.11699 3.22053 4.54399C2.62253 7.85399 3.79053 10.147 6.60353 11.916L8.35053 13.014C8.43354 13.0662 8.5025 13.1379 8.55138 13.2228C8.60026 13.3078 8.62757 13.4035 8.63093 13.5015C8.63428 13.5995 8.61358 13.6968 8.57062 13.7849C8.52767 13.873 8.46378 13.9493 8.38453 14.007L6.79253 15.17C7.73953 15.229 8.63853 15.187 9.38453 15.039C14.1025 14.097 17.2395 10.547 17.2395 4.69099C17.2395 4.21299 16.2275 2.54999 14.2995 2.54999ZM9.39953 5.35999C9.41699 4.39604 9.71842 3.45866 10.2661 2.66521C10.8138 1.87177 11.5833 1.25751 12.4784 0.899359C13.3736 0.541207 14.3544 0.455072 15.2983 0.65174C16.2421 0.848407 17.107 1.31914 17.7845 2.00499C18.4955 1.99999 19.1005 2.17999 20.4535 1.35999C20.1185 2.99999 19.9535 3.71199 19.2395 4.69099C19.2395 12.333 14.5425 16.049 9.77653 17C6.50853 17.652 1.75653 16.581 0.394531 15.159C1.08853 15.105 3.90853 14.802 5.53853 13.609C4.15953 12.7 -1.32947 9.46999 2.27753 0.785992C3.97053 2.76299 5.68753 4.10899 7.42753 4.82299C8.58553 5.29799 8.86953 5.28799 9.40053 5.36099L9.39953 5.35999Z' fill='%23384A62'/%3E%3C/svg%3E%0A"
          alt=""
        />
      </a>
      <CopyToClipboard
        text={`${process.env.NEXT_PUBLIC_BASE_URL}${path}`}
        onCopy={() => setCopied(true)}
      >
        <span className="cursor-pointer">
          <img
            src="data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M18.3638 15.536L16.9498 14.12L18.3638 12.706C18.8314 12.2425 19.2029 11.6911 19.4568 11.0836C19.7108 10.4761 19.8423 9.82442 19.8437 9.16597C19.8452 8.50752 19.7166 7.85527 19.4652 7.24666C19.2139 6.63806 18.8449 6.08508 18.3793 5.61949C17.9137 5.15389 17.3607 4.78484 16.7521 4.53353C16.1435 4.28222 15.4913 4.15359 14.8328 4.15503C14.1744 4.15647 13.5227 4.28796 12.9152 4.54193C12.3077 4.79591 11.7563 5.16737 11.2928 5.635L9.87877 7.05L8.46377 5.636L9.87977 4.222C11.1926 2.90918 12.9732 2.17165 14.8298 2.17165C16.6864 2.17165 18.4669 2.90918 19.7798 4.222C21.0926 5.53483 21.8301 7.31539 21.8301 9.172C21.8301 11.0286 21.0926 12.8092 19.7798 14.122L18.3648 15.536H18.3638ZM15.5358 18.364L14.1208 19.778C12.8079 21.0908 11.0274 21.8284 9.17077 21.8284C7.31416 21.8284 5.53359 21.0908 4.22077 19.778C2.90795 18.4652 2.17041 16.6846 2.17041 14.828C2.17041 12.9714 2.90795 11.1908 4.22077 9.878L5.63577 8.464L7.04977 9.88L5.63577 11.294C5.16814 11.7576 4.79667 12.3089 4.5427 12.9164C4.28872 13.5239 4.15724 14.1756 4.1558 14.834C4.15435 15.4925 4.28298 16.1447 4.53429 16.7533C4.78561 17.362 5.15465 17.9149 5.62025 18.3805C6.08585 18.8461 6.63882 19.2152 7.24743 19.4665C7.85603 19.7178 8.50828 19.8464 9.16673 19.845C9.82518 19.8435 10.4769 19.7121 11.0844 19.4581C11.6919 19.2041 12.2432 18.8326 12.7068 18.365L14.1208 16.951L15.5358 18.365V18.364ZM14.8278 7.757L16.2428 9.172L9.17177 16.242L7.75677 14.828L14.8278 7.758V7.757Z' fill='%23384A62'/%3E%3C/svg%3E%0A"
            alt=""
          />
        </span>
      </CopyToClipboard>
    </div>
  );
}
